stages:
  - deploy
  - build
  - test
  - push



Build:
  stage: build
  image: alpine:latest
  before_script:
    - apk update
    - apk add --no-cache build-base
    - apk add --no-cache cmake
  script:
    - cmake -DCMAKE_BUILD_TYPE=Release -S. -B./build
    - cmake --build ./build --parallel 8
    - ls build/
  artifacts:
    paths:
      - build/



Tests:
  stage: test
  image: alpine:latest
  before_script:
    - apk update
    - apk add --no-cache cmake
  script:
    - ctest --test-dir build
  dependencies:
    - Build



Push:
  stage: push
  image: docker
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - ls
    - ls build
    - ls build/apps
    - docker info
    - docker build -t $CI_DOCKER_IMAGE_NAME .
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker push $CI_DOCKER_IMAGE_NAME
  tags:
    - dind
  dependencies:
    - Build

Deploy Production:
  stage: deploy
  image: alpine
  before_script:
    - apk update
    - apk add openssh-client
    - eval $(ssh-agent -s)
  script:
    - echo $SSH_PRIVATE_KEY
    - echo "$SSH_PRIVATE_KEY"
    - echo "Local port = $CI_PROGRAM_PORT_LOCAL"
    - echo "Host  port = $CI_PROGRAM_PORT_HOST"
    - echo "Local port = '$CI_PROGRAM_PORT_LOCAL'"
    - echo "Host  port = '$CI_PROGRAM_PORT_HOST'"
    - echo "$$CI_PROGRAM_PORT_LOCAL"
    - echo "$$CI_PROGRAM_PORT_HOST"
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh -i "$SSH_PRIVATE_KEY" -o "StrictHostKeyChecking=no" "$CI_SERVER_USER"@"$CI_SERVER_ADDRESS" "
      echo $CI_SERVER_PASSWORD | sudo -S docker pull $CI_DOCKER_IMAGE_NAME && 
      echo $CI_SERVER_PASSWORD | sudo -S docker stop $CI_DOCKER_CONTAINER_NAME && 
      echo $CI_SERVER_PASSWORD | sudo -S docker rm $CI_DOCKER_CONTAINER_NAME && 
      echo $CI_SERVER_PASSWORD | sudo -S docker run -itd -p 80:7999 --restart=always --name $CI_DOCKER_CONTAINER_NAME $CI_DOCKER_IMAGE_NAME
      "
