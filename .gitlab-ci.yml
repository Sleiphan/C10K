stages:
  - build
  - test
  - push
  - deploy



Build:
  stage: build
  image: alpine:latest
  before_script:
    - apk update
    - apk add --no-cache build-base
    - apk add --no-cache cmake
  script:
    - cmake -DCMAKE_BUILD_TYPE=Release -S. -B./build
    - cmake --build ./build --parallel 8
    - ls build/
  artifacts:
    paths:
      - build/



Tests:
  stage: test
  image: alpine:latest
  before_script:
    - apk update
    - apk add --no-cache cmake
  script:
    - ctest --test-dir build
  dependencies:
    - Build



Push:
  stage: push
  image: docker
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - ls
    - ls build
    - ls build/apps
    - docker info
    - docker build -t $CI_DOCKER_IMAGE_NAME .
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker push $CI_DOCKER_IMAGE_NAME
  tags:
    - dind
  dependencies:
    - Build

Deploy Production:
  stage: build
  image: alpine
  before_script:
    - apk update
    - apk add openssh-client
    - eval $(ssh-agent -s)
  script:
    - echo "$SSH_PRIVATE_KEY"
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh -i "$SSH_PRIVATE_KEY" -o "StrictHostKeyChecking=no" "student"@"129.241.98.2"
#    - ssh -i "$SSH_PRIVATE_KEY" -o "StrictHostKeyChecking=no" "$CI_SERVER_USER"@"$CI_SERVER_ADDRESS"
    - docker pull $CI_DOCKER_IMAGE_NAME
    - docker stop $CI_DOCKER_CONTAINER_NAME
    - docker rm $CI_DOCKER_CONTAINER_NAME
    - docker run -itdp $CI_PROGRAM_PORT_HOST:$CI_PROGRAM_PORT_LOCAL --restart=always --name $CI_DOCKER_CONTAINER_NAME $CI_DOCKER_IMAGE_NAME
    - logout
